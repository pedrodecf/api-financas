// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id         String      @id @default(uuid())
  nome       String
  email      String      @unique
  senha      String
  balanco    Float       @default(0.0)
  transacoes Transacao[]
  categorias Categoria[]
  created_at DateTime    @default(now())
  updated_at DateTime    @updatedAt
  deleted_at DateTime?

  @@map("usuarios")
}

model Transacao {
  id          Int           @id @default(autoincrement())
  valor       Float
  tipo        TipoTransacao
  descricao   String?
  categoria   Categoria     @relation(fields: [categoriaId], references: [id])
  categoriaId Int
  data        DateTime      @default(now())
  usuario     Usuario       @relation(fields: [usuarioId], references: [id])
  usuarioId   String
  deleted_at  DateTime?

  @@map("transacoes")
}

model Categoria {
  id         Int         @id @default(autoincrement())
  nome       String
  descricao  String
  avatar     String
  deleted_at DateTime?
  transacoes Transacao[]
  usuario    Usuario     @relation(fields: [usuarioId], references: [id])
  usuarioId  String

  @@map("categorias")
}

enum TipoTransacao {
  Entrada
  Saida
}
